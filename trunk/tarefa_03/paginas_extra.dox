/**
 *
 * 
@mainpage Autores

	@li Nome: Fernando Lucchesi Bastos Jurema RA: 091187
	@li Nome: Gabriel Coutinho Natucci        RA: 091247

@page page0 Introdução

O projeto desenvolvido tem por base percorrer (iterar) sobre um sistemas de 
arquivos passado, e obter estatísticas relevantes a respeito, como o número de 
fragmentos livres, o número de fragmentos ocupados, bem como um historama dos 
dados obtidos.


@page page1 Decisões de Projeto
Para iterar sobre o sistema de arquivos e obter os dados relevantes a respeito 
foi utilizada a biblioteca EXT2FS Library Functions (ext2fs.h), utilizada para 
filesystems ext*.


Separamos o projeto em partes:
	@li Um executável(./dados) para obter os dados do sistema de arquivos

Ele prossui três opções: a primeira, para imprimir os dados de fragmentação de 
blocos alocados em no. de segmentos; a segunda, para imprimir os dados de 
tamanhos de arquivos em blocos de alocação; e a terceira, para imprimir o numero
 de fragmentos ocupados(em KB/segmento).

Ele recebe o número da opção e o caminho para a imagem a ser examinada.

	@li Um executável(./contagem) que, recebendo um conjunto de dados, separa-os
 pelos tamanhos para o histograma

Ele recebe uma série de dados, um por linha, e os seleciona em cada intervalo do
 histograma, imprimindo o trecho do html a ser usado no histograma.

	@li Um script(histograma.sh) que, usando o executável de separar, gera um 
histograma em html/javascript

Ele inclui os arquivos top.html e bottom.html, que juntos com a saída do 
./contagem gera um html, que serve de base para o histograma em javascript.

	@li Um script(obter_dados_c.sh) que, usando todos os outros códigos, gera os
 dois histogramas e obtém as relações pedidas.

Ele executa automaticamente o ./dados, redirecionando sua saída para o script de
 gerar histogramas, além de imprimir os dados da opção 3.



Optamos por usar um makefile para compilar e gerar a documentação do programa.
	@li Compilar: make
	@li Documentação: make doc


O comando "make" compila todos os executáveis da tarefa.

O comando "make doc" gera uma documentação em html e em latex (que depois é convertida em
um relatório -este- em pdf) com a ajuda da ferramenta Doxygen, na pasta doc.



@page page2 Dificuldades

A maior dificuldade foi a falta de documentação da biblioteca(ext2fs), sendo 
necessário um grande esforço da turma para tentar decifrar suas funcionalidades.


Além disso, tentamos fazer um binding para Ruby, usando a ferramenta FFI; 
entretanto, é difícil encontrar documentação sobre como lidar com os ponteiros 
para função que aparecem em algumas structs, além de não haver uma maneira clara
 de lidar com structs aninhadas. Com isso, perdemos muito tempo que poderia ter 
sido usado para fazer a tarefa diretamente em C(que foi a segunda opção).

O código da tentativa se encontra na pasta ruby_binding.


 * 
 * 
 */
